import fs from 'fs';

interface Node {
    html: string;
}

interface Violation {
    id: string;
    impact: string;
    description: string;
    help: string;
    helpUrl: string;
    tags: string[];
    nodes: Node[];
}

interface AccessibilityReport {
    url: string;
    environment: string;
    browser: string;
    violations: Violation[];
    incomplete: Violation[];
}

function generateHtmlReport(reports: AccessibilityReport[]) {
    // Begin the HTML content
    let htmlContent = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Axe-core® Accessibility Reports</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f4f4f9;
                color: #333;
                margin: 0;
                padding: 20px;
            }
            h1, h2, h3 {
                color: #2c3e50;
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background-color: white;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 40px;
            }
            table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: 40px;
            }
            table, th, td {
                border: 1px solid #ddd;
            }
            th, td {
                padding: 12px;
                text-align: left;
            }
            th {
                background-color: #34495e;
                color: white;
            }
            .high-impact {
                color: red;
                font-weight: bold;
            }
            .moderate-impact {
                color: orange;
                font-weight: bold;
            }
            .low-impact {
                color: green;
                font-weight: bold;
            }
            .violations, .incomplete {
                margin-bottom: 40px;
            }
            .issue-details {
                background-color: #f9f9f9;
                padding: 15px;
                border-radius: 5px;
                margin-bottom: 20px;
                border-left: 5px solid #e74c3c;
            }
            .code-snippet {
                background-color: #eee;
                padding: 10px;
                border-radius: 5px;
                font-family: monospace;
            }
            .learn-more {
                color: #3498db;
                text-decoration: none;
            }
            .footer {
                text-align: center;
                margin-top: 50px;
            }
            .footer p {
                font-size: 14px;
                color: #777;
            }
        </style>
    </head>
    <body>
        <h1>Axe-core® Accessibility Reports</h1>
    `;

    // Loop through the reports array and build the report for each one
    reports.forEach((report, reportIndex) => {
        htmlContent += `
        <div class="container">
            <h2>Report ${reportIndex + 1}</h2>
            <p><strong>Page URL:</strong> <a href="${report.url}" target="_blank">${report.url}</a></p>
            <p><strong>Environment:</strong> ${report.environment}</p>
            <p><strong>Browser:</strong> ${report.browser}</p>

            <!-- Violations Section -->
            <h3>Violations (Total: ${report.violations.length})</h3>
            <table class="violations">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Description</th>
                        <th>Axe Rule ID</th>
                        <th>WCAG</th>
                        <th>Impact</th>
                        <th>Count</th>
                    </tr>
                </thead>
                <tbody>`;

        report.violations.forEach((violation, violationIndex) => {
            htmlContent += `
                    <tr>
                        <td>${violationIndex + 1}</td>
                        <td>${violation.description}</td>
                        <td>${violation.id}</td>
                        <td>${violation.tags ? violation.tags.join(', ') : 'N/A'}</td>
                        <td class="${violation.impact}-impact">${violation.impact}</td>
                        <td>${violation.nodes.length}</td>
                    </tr>`;
        });

        htmlContent += `
                </tbody>
            </table>

            <!-- Incomplete Section -->
            <h3>Incomplete Issues (Total: ${report.incomplete.length})</h3>
            <table class="incomplete">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Description</th>
                        <th>Axe Rule ID</th>
                        <th>WCAG</th>
                        <th>Impact</th>
                        <th>Count</th>
                    </tr>
                </thead>
                <tbody>`;

        report.incomplete.forEach((incomplete, incompleteIndex) => {
            htmlContent += `
                    <tr>
                        <td>${incompleteIndex + 1}</td>
                        <td>${incomplete.description}</td>
                        <td>${incomplete.id}</td>
                        <td>${incomplete.tags ? incomplete.tags.join(', ') : 'N/A'}</td>
                        <td class="${incomplete.impact}-impact">${incomplete.impact}</td>
                        <td>${incomplete.nodes.length}</td>
                    </tr>`;
        });

        htmlContent += `
                </tbody>
            </table>

            <!-- Detailed Failed Issues Section -->
            <h3>Failed Issues</h3>`;
        
        report.violations.forEach((violation) => {
            htmlContent += `
            <div class="issue-details">
                <h4>${violation.description}</h4>
                <p><strong>Rule:</strong> ${violation.id}</p>
                <p><strong>Impact:</strong> <span class="${violation.impact}-impact">${violation.impact}</span></p>
                <p><strong>Solution:</strong> ${violation.help}</p>
                <div class="code-snippet">
                    <p><strong>Example:</strong> ${violation.nodes[0] ? violation.nodes[0].html : 'N/A'}</p>
                </div>
                <a href="${violation.helpUrl}" class="learn-more" target="_blank">Learn more</a>
            </div>`;
        });

        htmlContent += `</div>`;
    });

    // Footer section
    htmlContent += `
        <div class="footer">
            <p>&copy; 2024 Accessibility Reports | Generated with Playwright Axe-core</p>
        </div>
    </body>
    </html>
    `;

    // Write the content to an HTML file
    fs.writeFileSync('accessibility-report.html', htmlContent);
    console.log('Accessibility report has been generated successfully!');
}
